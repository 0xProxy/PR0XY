{
  "address": "0xF3DB9B38d636f244D90BA597c6dCF138ed23b4D6",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum Actions",
          "name": "action",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "ActionExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "currentEpoch",
          "type": "uint16"
        }
      ],
      "name": "AllPoliciesReconfigured",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPolicies",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedPolicies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "epochLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Actions",
          "name": "action_",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "target_",
          "type": "address"
        }
      ],
      "name": "executeAction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "executive",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getKeycodeForSystem",
      "outputs": [
        {
          "internalType": "bytes3",
          "name": "",
          "type": "bytes3"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes3",
          "name": "",
          "type": "bytes3"
        }
      ],
      "name": "getSystemForKeycode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isLaunched",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "launch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startingEpochTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x3ff057fb8d54c44189b4a339098c1f7f06c3065a0f4fe3b1aaba74d933accb11",
  "receipt": {
    "to": null,
    "from": "0xca88A4b589bD76361517f20985365DE9c2376139",
    "contractAddress": "0xF3DB9B38d636f244D90BA597c6dCF138ed23b4D6",
    "transactionIndex": 49,
    "gasUsed": "1090047",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080008000000000000000000000000000000000000000000000000000000000800000000000000000000100000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000800000000000000000000000008000200000000000000000000000000000000000000000000000000000000000004000000000000000000001000000000080000000000000000001100000000001000000000000000000000000000000000000000000000000000000000000100000",
    "blockHash": "0x8b21071b380d49272a2d4a263770db3f756f3e8aa593c669eb7585ddc1d31e82",
    "transactionHash": "0x3ff057fb8d54c44189b4a339098c1f7f06c3065a0f4fe3b1aaba74d933accb11",
    "logs": [
      {
        "transactionIndex": 49,
        "blockNumber": 25887348,
        "transactionHash": "0x3ff057fb8d54c44189b4a339098c1f7f06c3065a0f4fe3b1aaba74d933accb11",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000ca88a4b589bd76361517f20985365de9c2376139",
          "0x000000000000000000000000e87d858ca83ffc1e8372b57b2d4f8aaaf8156f19"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000d4fe8ede75fb50000000000000000000000000000000000000000000000001a055690d9db80000000000000000000000000000000000000000000000000305aab4b850e78067d90000000000000000000000000000000000000000000000019f806a7ebf4204b0000000000000000000000000000000000000000000000305ab89b6dfc5f66329",
        "logIndex": 165,
        "blockHash": "0x8b21071b380d49272a2d4a263770db3f756f3e8aa593c669eb7585ddc1d31e82"
      }
    ],
    "blockNumber": 25887348,
    "cumulativeGasUsed": "7666107",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "4b8aaa39b4845699f534ab02501a9e4d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum Actions\",\"name\":\"action\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ActionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"currentEpoch\",\"type\":\"uint16\"}],\"name\":\"AllPoliciesReconfigured\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPolicies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedPolicies\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epochLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Actions\",\"name\":\"action_\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"target_\",\"type\":\"address\"}],\"name\":\"executeAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executive\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getKeycodeForSystem\",\"outputs\":[{\"internalType\":\"bytes3\",\"name\":\"\",\"type\":\"bytes3\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes3\",\"name\":\"\",\"type\":\"bytes3\"}],\"name\":\"getSystemForKeycode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startingEpochTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"contracts/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\n\\npragma solidity ^0.8.10;\\n\\ncontract System {\\n    Proxy public _proxy;\\n\\n\\n    constructor(Proxy proxy_) {\\n      _proxy = proxy_; \\n    }\\n\\n\\n    function KEYCODE() external pure virtual returns (bytes3) {}\\n\\n\\n    modifier onlyPolicy {\\n        require (_proxy.approvedPolicies( msg.sender ), \\\"onlyPolicy(): only approved policies can call this function\\\");\\n        _;\\n    }\\n}\\n\\n\\ncontract Policy {\\n  Proxy public _proxy;\\n\\n\\n  constructor(Proxy proxy_) {\\n      _proxy = proxy_; \\n  }\\n\\n\\n  function requireSystem(bytes3 keycode_) internal view returns (address) {\\n    address systemForKeycode = _proxy.getSystemForKeycode(keycode_);\\n\\n    require(systemForKeycode != address(0), \\\"cannot _requireSytem(): system does not exist\\\" );\\n\\n    return systemForKeycode;\\n  }\\n\\n\\n  function configureSystems() virtual external onlyProxy {}\\n\\n\\n  modifier onlyProxy {\\n    require (msg.sender == address(_proxy), \\\"onlyProxy(): only the Proxy can call this function\\\");\\n    _;\\n  }\\n\\n}\\n\\n\\nenum Actions {\\n  InstallSystem,\\n  UpgradeSystem,\\n  ApprovePolicy,\\n  TerminatePolicy,\\n  ChangeExecutive\\n}\\n\\n\\nstruct Instruction {\\n  Actions action;\\n  address target;\\n}\\n\\n\\ncontract Proxy{\\n\\n  address public executive; \\n\\n  constructor() {\\n    executive = msg.sender;\\n  }\\n  \\n  modifier onlyExecutive() {\\n    require ( msg.sender == executive, \\\"onlyExecutive(): only the assigned executive can call the function\\\" );\\n    _;\\n  }\\n\\n\\n  /////////////////////////////////////////////////////////////////////////////////////\\n  //                                  EPOCH STUFF                                    //\\n  /////////////////////////////////////////////////////////////////////////////////////\\n  \\n\\n  uint256 public startingEpochTimestamp; \\n  uint256 public constant epochLength = 60 * 60 * 24 * 7; // number of seconds in a week\\n  bool public isLaunched;\\n\\n\\n  function currentEpoch() public view returns (uint256) {\\n    if ( isLaunched == true && block.timestamp >= startingEpochTimestamp ) {\\n      return (( block.timestamp - startingEpochTimestamp ) / epochLength ) + 1;\\n    } else {\\n      return 0;\\n    }\\n  }\\n\\n  function launch() external onlyExecutive {\\n    require (isLaunched == false, \\\"cannot launch(): Proxy is already launched\\\");\\n    startingEpochTimestamp = epochLength * (( block.timestamp / epochLength ) + 1 );\\n    isLaunched = true;\\n  }\\n\\n\\n  ///////////////////////////////////////////////////////////////////////////////////////\\n  //                                 DEPENDENCY MANAGEMENT                             //\\n  ///////////////////////////////////////////////////////////////////////////////////////\\n\\n\\n  mapping(bytes3 => address) public getSystemForKeycode; // get contract for system keycode\\n  mapping(address => bytes3) public getKeycodeForSystem; // get system keycode for contract\\n  mapping(address => bool) public approvedPolicies; // whitelisted apps\\n  address[] public allPolicies;\\n\\n  event ActionExecuted(Actions action, address target);\\n  event AllPoliciesReconfigured(uint16 currentEpoch);\\n\\n  \\n  function executeAction(Actions action_, address target_) external onlyExecutive {\\n    if (action_ == Actions.InstallSystem) {\\n      _installSystem(target_); \\n\\n    } else if (action_ == Actions.UpgradeSystem) {\\n      _upgradeSystem(target_); \\n\\n    } else if (action_ == Actions.ApprovePolicy) {\\n      _approvePolicy(target_); \\n\\n    } else if (action_ == Actions.TerminatePolicy) {\\n      _terminatePolicy(target_); \\n    \\n    } else if (action_ == Actions.ChangeExecutive) {\\n      // require Proxy to install the executive system before calling ChangeExecutive on it\\n      require(getKeycodeForSystem[target_] == \\\"EXC\\\", \\\"cannot changeExecutive(): target is not the Executive system\\\");\\n      executive = target_;\\n    }\\n\\n    emit ActionExecuted(action_, target_);\\n  }\\n\\n\\n  function _installSystem(address newSystem_ ) internal {\\n    bytes3 keycode = System(newSystem_).KEYCODE();\\n    \\n    // @NOTE check newSystem_ != 0\\n    require( getSystemForKeycode[keycode] == address(0), \\\"cannot _installSystem(): Existing system found for keycode\\\");\\n\\n    getSystemForKeycode[keycode] = newSystem_;\\n    getKeycodeForSystem[newSystem_] = keycode;\\n  }\\n\\n\\n  function _upgradeSystem(address newSystem_ ) internal {\\n    bytes3 keycode = System(newSystem_).KEYCODE();\\n    address oldSystem = getSystemForKeycode[keycode];\\n    \\n    require(oldSystem != address(0) && oldSystem != newSystem_, \\\"cannot _upgradeSystem(): an existing system must be upgraded to a new system\\\");\\n\\n    getKeycodeForSystem[oldSystem] = bytes3(0);\\n    getKeycodeForSystem[newSystem_] = keycode;\\n    getSystemForKeycode[keycode] = newSystem_;\\n\\n    _reconfigurePolicies();\\n  }\\n\\n\\n  function _approvePolicy(address policy_ ) internal {\\n    require( approvedPolicies[policy_] == false, \\\"cannot _approvePolicy(): Policy is already approved\\\" );\\n\\n    approvedPolicies[policy_] = true;\\n    \\n    allPolicies.push(policy_);\\n    Policy(policy_).configureSystems();\\n  }\\n\\n  function _terminatePolicy(address policy_ ) internal {\\n    require( approvedPolicies[policy_] == true, \\\"cannot _terminatePolicy(): Policy is not approved\\\" );\\n    \\n    approvedPolicies[policy_] = false;\\n  }\\n\\n\\n  function _reconfigurePolicies() internal {\\n    for (uint i=0; i<allPolicies.length; i++) {\\n      address policy_ = allPolicies[i];\\n      if (approvedPolicies[policy_]) {\\n        Policy(policy_).configureSystems();\\n      }\\n    }\\n  }\\n}\\n\\n\\n\",\"keccak256\":\"0xcd12a205dfb8aa67849b69aa505c9b29cd8162d118672df21890d605c10972bb\",\"license\":\"GPL-2.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055611287806100326000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806357d775f811610081578063c4d1f8f11161005b578063c4d1f8f1146101e9578063d172e995146101fc578063ec364d881461020557600080fd5b806357d775f814610175578063766718081461018d578063b243823f1461019557600080fd5b8063307aebc9116100b2578063307aebc91461011057806340fa6d2d1461011d578063514ed5581461016257600080fd5b806301339c21146100ce5780631d10fc64146100d8575b600080fd5b6100d661023b565b005b6100fb6100e6366004610fa8565b60056020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6002546100fb9060ff1681565b60005461013d9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610107565b61013d610170366004610fca565b6103f7565b61017f62093a8081565b604051908152602001610107565b61017f61042e565b6101b86101a3366004610fa8565b60046020526000908152604090205460e81b81565b6040517fffffff00000000000000000000000000000000000000000000000000000000009091168152602001610107565b6100d66101f7366004610fe3565b610481565b61017f60015481565b61013d61021336600461104a565b60036020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff16331461030d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f6f6e6c7945786563757469766528293a206f6e6c79207468652061737369676e60448201527f6564206578656375746976652063616e2063616c6c207468652066756e63746960648201527f6f6e000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b60025460ff16156103a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f63616e6e6f74206c61756e636828293a2050726f787920697320616c7265616460448201527f79206c61756e63686564000000000000000000000000000000000000000000006064820152608401610304565b6103ad62093a8042611096565b6103b89060016110d1565b6103c59062093a806110e9565b6001908155600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055565b6006818154811061040757600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60025460009060ff161515600114801561044a57506001544210155b1561047b5762093a80600154426104619190611126565b61046b9190611096565b6104769060016110d1565b905090565b50600090565b60005473ffffffffffffffffffffffffffffffffffffffff16331461054e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f6f6e6c7945786563757469766528293a206f6e6c79207468652061737369676e60448201527f6564206578656375746976652063616e2063616c6c207468652066756e63746960648201527f6f6e000000000000000000000000000000000000000000000000000000000000608482015260a401610304565b60008260048111156105625761056261113d565b14156105765761057181610770565b610733565b600182600481111561058a5761058a61113d565b1415610599576105718161096c565b60028260048111156105ad576105ad61113d565b14156105bc5761057181610be0565b60038260048111156105d0576105d061113d565b14156105df5761057181610da3565b60048260048111156105f3576105f361113d565b14156107335773ffffffffffffffffffffffffffffffffffffffff811660009081526004602052604090205460e81b7fffffff0000000000000000000000000000000000000000000000000000000000167f4558430000000000000000000000000000000000000000000000000000000000146106f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603c60248201527f63616e6e6f74206368616e676545786563757469766528293a2074617267657460448201527f206973206e6f7420746865204578656375746976652073797374656d000000006064820152608401610304565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790555b7f6560dd86d70bf03c0005b3533cc115fa8b8a12b4ee11c7342ae7b32d82267c90828260405161076492919061116c565b60405180910390a15050565b60008173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e191906111cc565b7fffffff0000000000000000000000000000000000000000000000000000000000811660009081526003602052604090205490915073ffffffffffffffffffffffffffffffffffffffff16156108b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f63616e6e6f74205f696e7374616c6c53797374656d28293a204578697374696e60448201527f672073797374656d20666f756e6420666f72206b6579636f64650000000000006064820152608401610304565b7fffffff00000000000000000000000000000000000000000000000000000000008116600090815260036020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff969096169586179055938252600490529190912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000001660e89290921c919091179055565b60008173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dd91906111cc565b7fffffff0000000000000000000000000000000000000000000000000000000000811660009081526003602052604090205490915073ffffffffffffffffffffffffffffffffffffffff168015801590610a6357508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b610b15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f63616e6e6f74205f7570677261646553797374656d28293a20616e206578697360448201527f74696e672073797374656d206d75737420626520757067726164656420746f2060648201527f61206e65772073797374656d0000000000000000000000000000000000000000608482015260a401610304565b73ffffffffffffffffffffffffffffffffffffffff818116600090815260046020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000908116909155938716808452818420805490951660e888901c179094557fffffff0000000000000000000000000000000000000000000000000000000000861683526003909152902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055610bdb610ea9565b505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526005602052604090205460ff1615610c96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f63616e6e6f74205f617070726f7665506f6c69637928293a20506f6c6963792060448201527f697320616c726561647920617070726f766564000000000000000000000000006064820152608401610304565b73ffffffffffffffffffffffffffffffffffffffff811660008181526005602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915560068054918201815583527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905580517fe51f9232000000000000000000000000000000000000000000000000000000008152905163e51f92329260048084019391929182900301818387803b158015610d8857600080fd5b505af1158015610d9c573d6000803e3d6000fd5b5050505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526005602052604090205460ff161515600114610e5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f63616e6e6f74205f7465726d696e617465506f6c69637928293a20506f6c696360448201527f79206973206e6f7420617070726f7665640000000000000000000000000000006064820152608401610304565b73ffffffffffffffffffffffffffffffffffffffff16600090815260056020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60005b600654811015610f7c57600060068281548110610ecb57610ecb6111e9565b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff16808352600590915260409091205490915060ff1615610f69578073ffffffffffffffffffffffffffffffffffffffff1663e51f92326040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f5057600080fd5b505af1158015610f64573d6000803e3d6000fd5b505050505b5080610f7481611218565b915050610eac565b50565b803573ffffffffffffffffffffffffffffffffffffffff81168114610fa357600080fd5b919050565b600060208284031215610fba57600080fd5b610fc382610f7f565b9392505050565b600060208284031215610fdc57600080fd5b5035919050565b60008060408385031215610ff657600080fd5b82356005811061100557600080fd5b915061101360208401610f7f565b90509250929050565b7fffffff000000000000000000000000000000000000000000000000000000000081168114610f7c57600080fd5b60006020828403121561105c57600080fd5b8135610fc38161101c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000826110cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600082198211156110e4576110e4611067565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561112157611121611067565b500290565b60008282101561113857611138611067565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60408101600584106111a7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b92815273ffffffffffffffffffffffffffffffffffffffff9190911660209091015290565b6000602082840312156111de57600080fd5b8151610fc38161101c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561124a5761124a611067565b506001019056fea264697066735822122029d87a7e0af9ce9cdd16a5590ef2315c8e54d20d9c87d139db620c4cdde3bd2d64736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100c95760003560e01c806357d775f811610081578063c4d1f8f11161005b578063c4d1f8f1146101e9578063d172e995146101fc578063ec364d881461020557600080fd5b806357d775f814610175578063766718081461018d578063b243823f1461019557600080fd5b8063307aebc9116100b2578063307aebc91461011057806340fa6d2d1461011d578063514ed5581461016257600080fd5b806301339c21146100ce5780631d10fc64146100d8575b600080fd5b6100d661023b565b005b6100fb6100e6366004610fa8565b60056020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6002546100fb9060ff1681565b60005461013d9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610107565b61013d610170366004610fca565b6103f7565b61017f62093a8081565b604051908152602001610107565b61017f61042e565b6101b86101a3366004610fa8565b60046020526000908152604090205460e81b81565b6040517fffffff00000000000000000000000000000000000000000000000000000000009091168152602001610107565b6100d66101f7366004610fe3565b610481565b61017f60015481565b61013d61021336600461104a565b60036020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff16331461030d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f6f6e6c7945786563757469766528293a206f6e6c79207468652061737369676e60448201527f6564206578656375746976652063616e2063616c6c207468652066756e63746960648201527f6f6e000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b60025460ff16156103a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f63616e6e6f74206c61756e636828293a2050726f787920697320616c7265616460448201527f79206c61756e63686564000000000000000000000000000000000000000000006064820152608401610304565b6103ad62093a8042611096565b6103b89060016110d1565b6103c59062093a806110e9565b6001908155600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055565b6006818154811061040757600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60025460009060ff161515600114801561044a57506001544210155b1561047b5762093a80600154426104619190611126565b61046b9190611096565b6104769060016110d1565b905090565b50600090565b60005473ffffffffffffffffffffffffffffffffffffffff16331461054e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f6f6e6c7945786563757469766528293a206f6e6c79207468652061737369676e60448201527f6564206578656375746976652063616e2063616c6c207468652066756e63746960648201527f6f6e000000000000000000000000000000000000000000000000000000000000608482015260a401610304565b60008260048111156105625761056261113d565b14156105765761057181610770565b610733565b600182600481111561058a5761058a61113d565b1415610599576105718161096c565b60028260048111156105ad576105ad61113d565b14156105bc5761057181610be0565b60038260048111156105d0576105d061113d565b14156105df5761057181610da3565b60048260048111156105f3576105f361113d565b14156107335773ffffffffffffffffffffffffffffffffffffffff811660009081526004602052604090205460e81b7fffffff0000000000000000000000000000000000000000000000000000000000167f4558430000000000000000000000000000000000000000000000000000000000146106f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603c60248201527f63616e6e6f74206368616e676545786563757469766528293a2074617267657460448201527f206973206e6f7420746865204578656375746976652073797374656d000000006064820152608401610304565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790555b7f6560dd86d70bf03c0005b3533cc115fa8b8a12b4ee11c7342ae7b32d82267c90828260405161076492919061116c565b60405180910390a15050565b60008173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e191906111cc565b7fffffff0000000000000000000000000000000000000000000000000000000000811660009081526003602052604090205490915073ffffffffffffffffffffffffffffffffffffffff16156108b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f63616e6e6f74205f696e7374616c6c53797374656d28293a204578697374696e60448201527f672073797374656d20666f756e6420666f72206b6579636f64650000000000006064820152608401610304565b7fffffff00000000000000000000000000000000000000000000000000000000008116600090815260036020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff969096169586179055938252600490529190912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000001660e89290921c919091179055565b60008173ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dd91906111cc565b7fffffff0000000000000000000000000000000000000000000000000000000000811660009081526003602052604090205490915073ffffffffffffffffffffffffffffffffffffffff168015801590610a6357508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b610b15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f63616e6e6f74205f7570677261646553797374656d28293a20616e206578697360448201527f74696e672073797374656d206d75737420626520757067726164656420746f2060648201527f61206e65772073797374656d0000000000000000000000000000000000000000608482015260a401610304565b73ffffffffffffffffffffffffffffffffffffffff818116600090815260046020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000908116909155938716808452818420805490951660e888901c179094557fffffff0000000000000000000000000000000000000000000000000000000000861683526003909152902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055610bdb610ea9565b505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526005602052604090205460ff1615610c96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f63616e6e6f74205f617070726f7665506f6c69637928293a20506f6c6963792060448201527f697320616c726561647920617070726f766564000000000000000000000000006064820152608401610304565b73ffffffffffffffffffffffffffffffffffffffff811660008181526005602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915560068054918201815583527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905580517fe51f9232000000000000000000000000000000000000000000000000000000008152905163e51f92329260048084019391929182900301818387803b158015610d8857600080fd5b505af1158015610d9c573d6000803e3d6000fd5b5050505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526005602052604090205460ff161515600114610e5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f63616e6e6f74205f7465726d696e617465506f6c69637928293a20506f6c696360448201527f79206973206e6f7420617070726f7665640000000000000000000000000000006064820152608401610304565b73ffffffffffffffffffffffffffffffffffffffff16600090815260056020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60005b600654811015610f7c57600060068281548110610ecb57610ecb6111e9565b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff16808352600590915260409091205490915060ff1615610f69578073ffffffffffffffffffffffffffffffffffffffff1663e51f92326040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f5057600080fd5b505af1158015610f64573d6000803e3d6000fd5b505050505b5080610f7481611218565b915050610eac565b50565b803573ffffffffffffffffffffffffffffffffffffffff81168114610fa357600080fd5b919050565b600060208284031215610fba57600080fd5b610fc382610f7f565b9392505050565b600060208284031215610fdc57600080fd5b5035919050565b60008060408385031215610ff657600080fd5b82356005811061100557600080fd5b915061101360208401610f7f565b90509250929050565b7fffffff000000000000000000000000000000000000000000000000000000000081168114610f7c57600080fd5b60006020828403121561105c57600080fd5b8135610fc38161101c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000826110cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600082198211156110e4576110e4611067565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561112157611121611067565b500290565b60008282101561113857611138611067565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60408101600584106111a7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b92815273ffffffffffffffffffffffffffffffffffffffff9190911660209091015290565b6000602082840312156111de57600080fd5b8151610fc38161101c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561124a5761124a611067565b506001019056fea264697066735822122029d87a7e0af9ce9cdd16a5590ef2315c8e54d20d9c87d139db620c4cdde3bd2d64736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4506,
        "contract": "contracts/Proxy.sol:Proxy",
        "label": "executive",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4529,
        "contract": "contracts/Proxy.sol:Proxy",
        "label": "startingEpochTimestamp",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 4540,
        "contract": "contracts/Proxy.sol:Proxy",
        "label": "isLaunched",
        "offset": 0,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 4604,
        "contract": "contracts/Proxy.sol:Proxy",
        "label": "getSystemForKeycode",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes3,t_address)"
      },
      {
        "astId": 4608,
        "contract": "contracts/Proxy.sol:Proxy",
        "label": "getKeycodeForSystem",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bytes3)"
      },
      {
        "astId": 4612,
        "contract": "contracts/Proxy.sol:Proxy",
        "label": "approvedPolicies",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4615,
        "contract": "contracts/Proxy.sol:Proxy",
        "label": "allPolicies",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes3": {
        "encoding": "inplace",
        "label": "bytes3",
        "numberOfBytes": "3"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_bytes3)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes3)",
        "numberOfBytes": "32",
        "value": "t_bytes3"
      },
      "t_mapping(t_bytes3,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes3",
        "label": "mapping(bytes3 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}