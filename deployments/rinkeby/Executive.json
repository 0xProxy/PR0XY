{
  "address": "0xF360D2be66579C8b95AD4BcdF6d3E4D5262F0346",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Proxy",
          "name": "proxy_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "instructionsId",
          "type": "uint256"
        }
      ],
      "name": "InstructionsExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "instructionsId",
          "type": "uint256"
        }
      ],
      "name": "InstructionsStored",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "ProxyLaunched",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "KEYCODE",
      "outputs": [
        {
          "internalType": "bytes3",
          "name": "",
          "type": "bytes3"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_proxy",
      "outputs": [
        {
          "internalType": "contract Proxy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "instructionsId_",
          "type": "uint256"
        }
      ],
      "name": "executeInstructions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "launchProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum Actions",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "internalType": "struct Instruction[]",
          "name": "instructions_",
          "type": "tuple[]"
        }
      ],
      "name": "storeInstructions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "storedInstructions",
      "outputs": [
        {
          "internalType": "enum Actions",
          "name": "action",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalInstructions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xf26c617f7fbb1cba5fc9221cdc3fe906529c118ff5c1001cf66f42e90e79ba8a",
  "receipt": {
    "to": null,
    "from": "0x88532f5e88F6A1ccd9E64681aCc63416594000f4",
    "contractAddress": "0xF360D2be66579C8b95AD4BcdF6d3E4D5262F0346",
    "transactionIndex": 12,
    "gasUsed": "1124511",
    "logsBloom": "0x
    "blockHash": "0x820b84058c70c779e05ca6f5f64c62bbb95f0d104618001f2ce5682465a72abe",
    "transactionHash": "0xf26c617f7fbb1cba5fc9221cdc3fe906529c118ff5c1001cf66f42e90e79ba8a",
    "logs": [],
    "blockNumber": 10315965,
    "cumulativeGasUsed": "3032271",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xcB4cB6fC9cf835b864f3F8c0eAf1e2E1d0dA08a6"
  ],
  "numDeployments": 1,
  "solcInputHash": "389fa6c06fc73f4f06f330cf536065fb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Proxy\",\"name\":\"proxy_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"instructionsId\",\"type\":\"uint256\"}],\"name\":\"InstructionsExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"instructionsId\",\"type\":\"uint256\"}],\"name\":\"InstructionsStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ProxyLaunched\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"KEYCODE\",\"outputs\":[{\"internalType\":\"bytes3\",\"name\":\"\",\"type\":\"bytes3\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_proxy\",\"outputs\":[{\"internalType\":\"contract Proxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"instructionsId_\",\"type\":\"uint256\"}],\"name\":\"executeInstructions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum Actions\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"internalType\":\"struct Instruction[]\",\"name\":\"instructions_\",\"type\":\"tuple[]\"}],\"name\":\"storeInstructions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"storedInstructions\",\"outputs\":[{\"internalType\":\"enum Actions\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalInstructions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Systems/EXC.sol\":\"Executive\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"contracts/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\n\\npragma solidity ^0.8.10;\\n\\ncontract System {\\n    Proxy public _proxy;\\n\\n\\n    constructor(Proxy proxy_) {\\n      _proxy = proxy_; \\n    }\\n\\n\\n    function KEYCODE() external pure virtual returns (bytes3) {}\\n\\n\\n    modifier onlyPolicy {\\n        require (_proxy.approvedPolicies( msg.sender ), \\\"onlyPolicy(): only approved policies can call this function\\\");\\n        _;\\n    }\\n}\\n\\n\\ncontract Policy {\\n  Proxy public _proxy;\\n\\n\\n  constructor(Proxy proxy_) {\\n      _proxy = proxy_; \\n  }\\n\\n\\n  function requireSystem(bytes3 keycode_) internal view returns (address) {\\n    address systemForKeycode = _proxy.getSystemForKeycode(keycode_);\\n\\n    require(systemForKeycode != address(0), \\\"cannot _requireSytem(): system does not exist\\\" );\\n\\n    return systemForKeycode;\\n  }\\n\\n\\n  function configureSystems() virtual external onlyProxy {}\\n\\n\\n  modifier onlyProxy {\\n    require (msg.sender == address(_proxy), \\\"onlyProxy(): only the Proxy can call this function\\\");\\n    _;\\n  }\\n\\n}\\n\\n\\nenum Actions {\\n  InstallSystem,\\n  UpgradeSystem,\\n  ApprovePolicy,\\n  TerminatePolicy,\\n  ChangeExecutive\\n}\\n\\n\\nstruct Instruction {\\n  Actions action;\\n  address target;\\n}\\n\\n\\ncontract Proxy{\\n\\n  address public executive; \\n\\n  constructor() {\\n    executive = msg.sender;\\n  }\\n  \\n  modifier onlyExecutive() {\\n    require ( msg.sender == executive, \\\"onlyExecutive(): only the assigned executive can call the function\\\" );\\n    _;\\n  }\\n\\n\\n  /////////////////////////////////////////////////////////////////////////////////////\\n  //                                  EPOCH STUFF                                    //\\n  /////////////////////////////////////////////////////////////////////////////////////\\n  \\n\\n  uint256 public startingEpochTimestamp; \\n  uint256 public constant epochLength = 60 * 60 * 24 * 7; // number of seconds in a week\\n  bool public isLaunched;\\n\\n\\n  function currentEpoch() public view returns (uint256) {\\n    if ( isLaunched == true && block.timestamp >= startingEpochTimestamp ) {\\n      return (( block.timestamp - startingEpochTimestamp ) / epochLength ) + 1;\\n    } else {\\n      return 0;\\n    }\\n  }\\n\\n  function launch() external onlyExecutive {\\n    require (isLaunched == false, \\\"cannot launch(): Proxy is already launched\\\");\\n    startingEpochTimestamp = epochLength * (( block.timestamp / epochLength ) + 1 );\\n    isLaunched = true;\\n  }\\n\\n\\n  ///////////////////////////////////////////////////////////////////////////////////////\\n  //                                 DEPENDENCY MANAGEMENT                             //\\n  ///////////////////////////////////////////////////////////////////////////////////////\\n\\n\\n  mapping(bytes3 => address) public getSystemForKeycode; // get contract for system keycode\\n  mapping(address => bytes3) public getKeycodeForSystem; // get system keycode for contract\\n  mapping(address => bool) public approvedPolicies; // whitelisted apps\\n  address[] public allPolicies;\\n\\n  event ActionExecuted(Actions action, address target);\\n  event AllPoliciesReconfigured(uint16 currentEpoch);\\n\\n  \\n  function executeAction(Actions action_, address target_) external onlyExecutive {\\n    if (action_ == Actions.InstallSystem) {\\n      _installSystem(target_); \\n\\n    } else if (action_ == Actions.UpgradeSystem) {\\n      _upgradeSystem(target_); \\n\\n    } else if (action_ == Actions.ApprovePolicy) {\\n      _approvePolicy(target_); \\n\\n    } else if (action_ == Actions.TerminatePolicy) {\\n      _terminatePolicy(target_); \\n    \\n    } else if (action_ == Actions.ChangeExecutive) {\\n      // require Proxy to install the executive system before calling ChangeExecutive on it\\n      require(getKeycodeForSystem[target_] == \\\"EXC\\\", \\\"cannot changeExecutive(): target is not the Executive system\\\");\\n      executive = target_;\\n    }\\n\\n    emit ActionExecuted(action_, target_);\\n  }\\n\\n\\n  function _installSystem(address newSystem_ ) internal {\\n    bytes3 keycode = System(newSystem_).KEYCODE();\\n    \\n    // @NOTE check newSystem_ != 0\\n    require( getSystemForKeycode[keycode] == address(0), \\\"cannot _installSystem(): Existing system found for keycode\\\");\\n\\n    getSystemForKeycode[keycode] = newSystem_;\\n    getKeycodeForSystem[newSystem_] = keycode;\\n  }\\n\\n\\n  function _upgradeSystem(address newSystem_ ) internal {\\n    bytes3 keycode = System(newSystem_).KEYCODE();\\n    address oldSystem = getSystemForKeycode[keycode];\\n    \\n    require(oldSystem != address(0) && oldSystem != newSystem_, \\\"cannot _upgradeSystem(): an existing system must be upgraded to a new system\\\");\\n\\n    getKeycodeForSystem[oldSystem] = bytes3(0);\\n    getKeycodeForSystem[newSystem_] = keycode;\\n    getSystemForKeycode[keycode] = newSystem_;\\n\\n    _reconfigurePolicies();\\n  }\\n\\n\\n  function _approvePolicy(address policy_ ) internal {\\n    require( approvedPolicies[policy_] == false, \\\"cannot _approvePolicy(): Policy is already approved\\\" );\\n\\n    approvedPolicies[policy_] = true;\\n    \\n    allPolicies.push(policy_);\\n    Policy(policy_).configureSystems();\\n  }\\n\\n  function _terminatePolicy(address policy_ ) internal {\\n    require( approvedPolicies[policy_] == true, \\\"cannot _terminatePolicy(): Policy is not approved\\\" );\\n    \\n    approvedPolicies[policy_] = false;\\n  }\\n\\n\\n  function _reconfigurePolicies() internal {\\n    for (uint i=0; i<allPolicies.length; i++) {\\n      address policy_ = allPolicies[i];\\n      if (approvedPolicies[policy_]) {\\n        Policy(policy_).configureSystems();\\n      }\\n    }\\n  }\\n}\\n\\n\\n\",\"keccak256\":\"0xcd12a205dfb8aa67849b69aa505c9b29cd8162d118672df21890d605c10972bb\",\"license\":\"GPL-2.0\"},\"contracts/Systems/EXC.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\n\\npragma solidity ^0.8.11;\\n// EXE is the execution engine for the OS.\\n\\nimport \\\"../Proxy.sol\\\";\\n\\ncontract Executive is System {\\n\\n\\n  /////////////////////////////////////////////////////////////////////////////////\\n  //                           Proxy Proxy Configuration                         //\\n  /////////////////////////////////////////////////////////////////////////////////\\n\\n\\n  constructor(Proxy proxy_) System(proxy_) {\\n    // instructionsForId[0];\\n  }\\n\\n  function KEYCODE() external pure override returns (bytes3) { return \\\"EXC\\\"; }\\n\\n\\n  /////////////////////////////////////////////////////////////////////////////////\\n  //                              System Variables                               //\\n  /////////////////////////////////////////////////////////////////////////////////\\n\\n\\n  /* imported from Proxy.sol\\n\\n  enum Actions {\\n    ChangeExecutive,\\n    ApprovePolicy,\\n    TerminatePolicy,\\n    InstallSystem,\\n    UpgradeSystem\\n  }\\n\\n  struct Instruction {\\n    Actions action;\\n    address target;\\n  }\\n\\n  */\\n\\n  uint256 public totalInstructions;\\n  mapping(uint256 => Instruction[]) public storedInstructions;\\n\\n\\n  /////////////////////////////////////////////////////////////////////////////////\\n  //                             Policy Interface                                //\\n  /////////////////////////////////////////////////////////////////////////////////\\n\\n\\n  event ProxyLaunched(uint256 timestamp);\\n  event InstructionsStored(uint256 instructionsId);\\n  event InstructionsExecuted(uint256 instructionsId);\\n\\n\\n  function launchProxy() external onlyPolicy {\\n    _proxy.launch();\\n\\n    emit ProxyLaunched(block.timestamp);\\n  }\\n\\n\\n  function storeInstructions(Instruction[] calldata instructions_) external onlyPolicy returns(uint256) {\\n    uint256 instructionsId = totalInstructions + 1;\\n    Instruction[] storage instructions = storedInstructions[instructionsId];\\n\\n    require(instructions_.length > 0, \\\"cannot storeInstructions(): instructions cannot be empty\\\");\\n\\n    // @TODO use u256\\n    for(uint i=0; i<instructions_.length; i++) { \\n      _ensureContract(instructions_[i].target);\\n      if (instructions_[i].action == Actions.InstallSystem || instructions_[i].action == Actions.UpgradeSystem) {\\n        bytes3 keycode = System(instructions_[i].target).KEYCODE();\\n        _ensureValidKeycode(keycode);\\n        if (keycode == \\\"EXC\\\") {\\n          require(instructions_[instructions_.length-1].action == Actions.ChangeExecutive, \\n                  \\\"cannot storeInstructions(): changes to the Executive system (EXC) requires changing the Proxy executive as the last step of the proposal\\\");\\n          require(instructions_[instructions_.length-1].target == instructions_[i].target,\\n                  \\\"cannot storeInstructions(): changeExecutive target address does not match the upgraded Executive system address\\\");\\n        }\\n      }\\n      instructions.push(instructions_[i]);\\n    }\\n    totalInstructions++;\\n\\n    emit InstructionsStored(instructionsId);\\n\\n    return instructionsId;\\n  }\\n\\n  function executeInstructions(uint256 instructionsId_) external onlyPolicy {\\n    Instruction[] storage proposal = storedInstructions[instructionsId_];\\n\\n    require(proposal.length > 0, \\\"cannot executeInstructions(): proposal does not exist\\\");\\n\\n    for(uint step=0; step<proposal.length; step++) {\\n      _proxy.executeAction(proposal[step].action, proposal[step].target);\\n    }\\n\\n    emit InstructionsExecuted(instructionsId_);\\n  }\\n  \\n\\n  /////////////////////////////// INTERNAL FUNCTIONS ////////////////////////////////\\n\\n\\n  function _ensureContract(address target_) internal view {\\n    uint256 size;\\n    assembly { size := extcodesize(target_) }\\n    require(size > 0, \\\"cannot storeInstructions(): target address is not a contract\\\");\\n  }\\n\\n\\n  function _ensureValidKeycode(bytes3 keycode) internal pure {\\n    for (uint256 i = 0; i < 3; i++) {\\n        bytes1 char = keycode[i];\\n        require(char >= 0x41 && char <= 0x5A, \\\" cannot storeInstructions(): invalid keycode\\\"); // A-Z only\\\"\\n    }\\n  }\\n}\",\"keccak256\":\"0xe5e0795fc6d5dec2d402e2e21d310a664be435f77c3f33e4d937e862bfa3ff9d\",\"license\":\"GPL-2.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516113b33803806113b383398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b611320806100936000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636eaadfc71161005b5780636eaadfc7146100eb57806385e0d8ad146100f45780638ba639a4146100fc578063cc2effdc1461011d57600080fd5b806318dc0de7146100825780631ae7ec2e146100a85780632ce21901146100d6575b600080fd5b610095610090366004610f45565b610162565b6040519081526020015b60405180910390f35b6040517f4558430000000000000000000000000000000000000000000000000000000000815260200161009f565b6100e96100e4366004610fba565b610833565b005b61009560015481565b6100e9610b33565b61010f61010a366004610fd3565b610d0b565b60405161009f929190611024565b60005461013d9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161009f565b600080546040517f1d10fc6400000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690631d10fc6490602401602060405180830381865afa1580156101d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f59190611084565b610286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f6f6e6c79506f6c69637928293a206f6e6c7920617070726f76656420706f6c6960448201527f636965732063616e2063616c6c20746869732066756e6374696f6e000000000060648201526084015b60405180910390fd5b6000600154600161029791906110dc565b600081815260026020526040902090915083610335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f63616e6e6f742073746f7265496e737472756374696f6e7328293a20696e737460448201527f72756374696f6e732063616e6e6f7420626520656d7074790000000000000000606482015260840161027d565b60005b848110156107e257610372868683818110610355576103556110f4565b905060400201602001602081019061036d9190611148565b610d59565b6000868683818110610386576103866110f4565b61039c9260206040909202019081019150611172565b60048111156103ad576103ad610ff5565b14806103f1575060018686838181106103c8576103c86110f4565b6103de9260206040909202019081019150611172565b60048111156103ef576103ef610ff5565b145b1561078e57600086868381811061040a5761040a6110f4565b90506040020160200160208101906104229190611148565b73ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610490919061118f565b905061049b81610dec565b7f45584300000000000000000000000000000000000000000000000000000000007fffffff00000000000000000000000000000000000000000000000000000000008216141561078c57600487876104f46001826111d1565b818110610503576105036110f4565b6105199260206040909202019081019150611172565b600481111561052a5761052a610ff5565b14610629576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152608860248201527f63616e6e6f742073746f7265496e737472756374696f6e7328293a206368616e60448201527f67657320746f20746865204578656375746976652073797374656d202845584360648201527f29207265717569726573206368616e67696e67207468652050726f787920657860848201527f6563757469766520617320746865206c6173742073746570206f66207468652060a48201527f70726f706f73616c00000000000000000000000000000000000000000000000060c482015260e40161027d565b86868381811061063b5761063b6110f4565b90506040020160200160208101906106539190611148565b73ffffffffffffffffffffffffffffffffffffffff1687876106766001826111d1565b818110610685576106856110f4565b905060400201602001602081019061069d9190611148565b73ffffffffffffffffffffffffffffffffffffffff161461078c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152606f60248201527f63616e6e6f742073746f7265496e737472756374696f6e7328293a206368616e60448201527f676545786563757469766520746172676574206164647265737320646f65732060648201527f6e6f74206d61746368207468652075706772616465642045786563757469766560848201527f2073797374656d2061646472657373000000000000000000000000000000000060a482015260c40161027d565b505b818686838181106107a1576107a16110f4565b835460018101855560009485526020909420604090910292909201929190910190506107cd82826111e8565b505080806107da906112b1565b915050610338565b50600180549060006107f3836112b1565b90915550506040518281527f786456549a8048fc360b44d675c164244436ef1e5048c3aecea4d160400fd0019060200160405180910390a1509392505050565b6000546040517f1d10fc6400000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690631d10fc6490602401602060405180830381865afa1580156108a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c59190611084565b610951576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f6f6e6c79506f6c69637928293a206f6e6c7920617070726f76656420706f6c6960448201527f636965732063616e2063616c6c20746869732066756e6374696f6e0000000000606482015260840161027d565b600081815260026020526040902080546109ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f63616e6e6f742065786563757465496e737472756374696f6e7328293a20707260448201527f6f706f73616c20646f6573206e6f742065786973740000000000000000000000606482015260840161027d565b60005b8154811015610afb57600054825473ffffffffffffffffffffffffffffffffffffffff9091169063c4d1f8f190849084908110610a2f57610a2f6110f4565b600091825260209091200154845460ff90911690859085908110610a5557610a556110f4565b60009182526020909120015460405160e084901b7fffffffff00000000000000000000000000000000000000000000000000000000168152610ab69291610100900473ffffffffffffffffffffffffffffffffffffffff1690600401611024565b600060405180830381600087803b158015610ad057600080fd5b505af1158015610ae4573d6000803e3d6000fd5b505050508080610af3906112b1565b9150506109f0565b506040518281527fdfded950fef0d7666005e810dd1bfab64a4d9e8bc53d3abe31c2cf7268d3d8239060200160405180910390a15050565b6000546040517f1d10fc6400000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690631d10fc6490602401602060405180830381865afa158015610ba1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc59190611084565b610c51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f6f6e6c79506f6c69637928293a206f6e6c7920617070726f76656420706f6c6960448201527f636965732063616e2063616c6c20746869732066756e6374696f6e0000000000606482015260840161027d565b60008054604080517f01339c21000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff909216926301339c219260048084019382900301818387803b158015610cb857600080fd5b505af1158015610ccc573d6000803e3d6000fd5b505050507ffa7fcc389a8dd8946810c44eaba79476ebda5ffa11280a99bd7fbef680336ec742604051610d0191815260200190565b60405180910390a1565b60026020528160005260406000208181548110610d2757600080fd5b60009182526020909120015460ff81169250610100900473ffffffffffffffffffffffffffffffffffffffff16905082565b803b80610de8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603c60248201527f63616e6e6f742073746f7265496e737472756374696f6e7328293a207461726760448201527f65742061646472657373206973206e6f74206120636f6e747261637400000000606482015260840161027d565b5050565b60005b6003811015610de8576000828260038110610e0c57610e0c6110f4565b1a60f81b90507f41000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821610801590610ea657507f5a000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821611155b610f32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f2063616e6e6f742073746f7265496e737472756374696f6e7328293a20696e7660448201527f616c6964206b6579636f64650000000000000000000000000000000000000000606482015260840161027d565b5080610f3d816112b1565b915050610def565b60008060208385031215610f5857600080fd5b823567ffffffffffffffff80821115610f7057600080fd5b818501915085601f830112610f8457600080fd5b813581811115610f9357600080fd5b8660208260061b8501011115610fa857600080fd5b60209290920196919550909350505050565b600060208284031215610fcc57600080fd5b5035919050565b60008060408385031215610fe657600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b604081016005841061105f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b92815273ffffffffffffffffffffffffffffffffffffffff9190911660209091015290565b60006020828403121561109657600080fd5b815180151581146110a657600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156110ef576110ef6110ad565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461114557600080fd5b50565b60006020828403121561115a57600080fd5b81356110a681611123565b6005811061114557600080fd5b60006020828403121561118457600080fd5b81356110a681611165565b6000602082840312156111a157600080fd5b81517fffffff0000000000000000000000000000000000000000000000000000000000811681146110a657600080fd5b6000828210156111e3576111e36110ad565b500390565b81356111f381611165565b6005811061122a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815460ff82169150817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008216178355602084013561126781611123565b74ffffffffffffffffffffffffffffffffffffffff008160081b16837fffffffffffffffffffffff0000000000000000000000000000000000000000008416171784555050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156112e3576112e36110ad565b506001019056fea26469706673582212207f2306b7e9458cbaaf143de007e1eb64664a8a3fb3216da31316011629e6293864736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80636eaadfc71161005b5780636eaadfc7146100eb57806385e0d8ad146100f45780638ba639a4146100fc578063cc2effdc1461011d57600080fd5b806318dc0de7146100825780631ae7ec2e146100a85780632ce21901146100d6575b600080fd5b610095610090366004610f45565b610162565b6040519081526020015b60405180910390f35b6040517f4558430000000000000000000000000000000000000000000000000000000000815260200161009f565b6100e96100e4366004610fba565b610833565b005b61009560015481565b6100e9610b33565b61010f61010a366004610fd3565b610d0b565b60405161009f929190611024565b60005461013d9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161009f565b600080546040517f1d10fc6400000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690631d10fc6490602401602060405180830381865afa1580156101d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f59190611084565b610286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f6f6e6c79506f6c69637928293a206f6e6c7920617070726f76656420706f6c6960448201527f636965732063616e2063616c6c20746869732066756e6374696f6e000000000060648201526084015b60405180910390fd5b6000600154600161029791906110dc565b600081815260026020526040902090915083610335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f63616e6e6f742073746f7265496e737472756374696f6e7328293a20696e737460448201527f72756374696f6e732063616e6e6f7420626520656d7074790000000000000000606482015260840161027d565b60005b848110156107e257610372868683818110610355576103556110f4565b905060400201602001602081019061036d9190611148565b610d59565b6000868683818110610386576103866110f4565b61039c9260206040909202019081019150611172565b60048111156103ad576103ad610ff5565b14806103f1575060018686838181106103c8576103c86110f4565b6103de9260206040909202019081019150611172565b60048111156103ef576103ef610ff5565b145b1561078e57600086868381811061040a5761040a6110f4565b90506040020160200160208101906104229190611148565b73ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610490919061118f565b905061049b81610dec565b7f45584300000000000000000000000000000000000000000000000000000000007fffffff00000000000000000000000000000000000000000000000000000000008216141561078c57600487876104f46001826111d1565b818110610503576105036110f4565b6105199260206040909202019081019150611172565b600481111561052a5761052a610ff5565b14610629576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152608860248201527f63616e6e6f742073746f7265496e737472756374696f6e7328293a206368616e60448201527f67657320746f20746865204578656375746976652073797374656d202845584360648201527f29207265717569726573206368616e67696e67207468652050726f787920657860848201527f6563757469766520617320746865206c6173742073746570206f66207468652060a48201527f70726f706f73616c00000000000000000000000000000000000000000000000060c482015260e40161027d565b86868381811061063b5761063b6110f4565b90506040020160200160208101906106539190611148565b73ffffffffffffffffffffffffffffffffffffffff1687876106766001826111d1565b818110610685576106856110f4565b905060400201602001602081019061069d9190611148565b73ffffffffffffffffffffffffffffffffffffffff161461078c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152606f60248201527f63616e6e6f742073746f7265496e737472756374696f6e7328293a206368616e60448201527f676545786563757469766520746172676574206164647265737320646f65732060648201527f6e6f74206d61746368207468652075706772616465642045786563757469766560848201527f2073797374656d2061646472657373000000000000000000000000000000000060a482015260c40161027d565b505b818686838181106107a1576107a16110f4565b835460018101855560009485526020909420604090910292909201929190910190506107cd82826111e8565b505080806107da906112b1565b915050610338565b50600180549060006107f3836112b1565b90915550506040518281527f786456549a8048fc360b44d675c164244436ef1e5048c3aecea4d160400fd0019060200160405180910390a1509392505050565b6000546040517f1d10fc6400000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690631d10fc6490602401602060405180830381865afa1580156108a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c59190611084565b610951576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f6f6e6c79506f6c69637928293a206f6e6c7920617070726f76656420706f6c6960448201527f636965732063616e2063616c6c20746869732066756e6374696f6e0000000000606482015260840161027d565b600081815260026020526040902080546109ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f63616e6e6f742065786563757465496e737472756374696f6e7328293a20707260448201527f6f706f73616c20646f6573206e6f742065786973740000000000000000000000606482015260840161027d565b60005b8154811015610afb57600054825473ffffffffffffffffffffffffffffffffffffffff9091169063c4d1f8f190849084908110610a2f57610a2f6110f4565b600091825260209091200154845460ff90911690859085908110610a5557610a556110f4565b60009182526020909120015460405160e084901b7fffffffff00000000000000000000000000000000000000000000000000000000168152610ab69291610100900473ffffffffffffffffffffffffffffffffffffffff1690600401611024565b600060405180830381600087803b158015610ad057600080fd5b505af1158015610ae4573d6000803e3d6000fd5b505050508080610af3906112b1565b9150506109f0565b506040518281527fdfded950fef0d7666005e810dd1bfab64a4d9e8bc53d3abe31c2cf7268d3d8239060200160405180910390a15050565b6000546040517f1d10fc6400000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690631d10fc6490602401602060405180830381865afa158015610ba1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc59190611084565b610c51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f6f6e6c79506f6c69637928293a206f6e6c7920617070726f76656420706f6c6960448201527f636965732063616e2063616c6c20746869732066756e6374696f6e0000000000606482015260840161027d565b60008054604080517f01339c21000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff909216926301339c219260048084019382900301818387803b158015610cb857600080fd5b505af1158015610ccc573d6000803e3d6000fd5b505050507ffa7fcc389a8dd8946810c44eaba79476ebda5ffa11280a99bd7fbef680336ec742604051610d0191815260200190565b60405180910390a1565b60026020528160005260406000208181548110610d2757600080fd5b60009182526020909120015460ff81169250610100900473ffffffffffffffffffffffffffffffffffffffff16905082565b803b80610de8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603c60248201527f63616e6e6f742073746f7265496e737472756374696f6e7328293a207461726760448201527f65742061646472657373206973206e6f74206120636f6e747261637400000000606482015260840161027d565b5050565b60005b6003811015610de8576000828260038110610e0c57610e0c6110f4565b1a60f81b90507f41000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821610801590610ea657507f5a000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821611155b610f32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f2063616e6e6f742073746f7265496e737472756374696f6e7328293a20696e7660448201527f616c6964206b6579636f64650000000000000000000000000000000000000000606482015260840161027d565b5080610f3d816112b1565b915050610def565b60008060208385031215610f5857600080fd5b823567ffffffffffffffff80821115610f7057600080fd5b818501915085601f830112610f8457600080fd5b813581811115610f9357600080fd5b8660208260061b8501011115610fa857600080fd5b60209290920196919550909350505050565b600060208284031215610fcc57600080fd5b5035919050565b60008060408385031215610fe657600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b604081016005841061105f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b92815273ffffffffffffffffffffffffffffffffffffffff9190911660209091015290565b60006020828403121561109657600080fd5b815180151581146110a657600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156110ef576110ef6110ad565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461114557600080fd5b50565b60006020828403121561115a57600080fd5b81356110a681611123565b6005811061114557600080fd5b60006020828403121561118457600080fd5b81356110a681611165565b6000602082840312156111a157600080fd5b81517fffffff0000000000000000000000000000000000000000000000000000000000811681146110a657600080fd5b6000828210156111e3576111e36110ad565b500390565b81356111f381611165565b6005811061122a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815460ff82169150817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008216178355602084013561126781611123565b74ffffffffffffffffffffffffffffffffffffffff008160081b16837fffffffffffffffffffffff0000000000000000000000000000000000000000008416171784555050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156112e3576112e36110ad565b506001019056fea26469706673582212207f2306b7e9458cbaaf143de007e1eb64664a8a3fb3216da31316011629e6293864736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4378,
        "contract": "contracts/Systems/EXC.sol:Executive",
        "label": "_proxy",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(Proxy)4866"
      },
      {
        "astId": 4892,
        "contract": "contracts/Systems/EXC.sol:Executive",
        "label": "totalInstructions",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 4898,
        "contract": "contracts/Systems/EXC.sol:Executive",
        "label": "storedInstructions",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_array(t_struct(Instruction)4484_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Instruction)4484_storage)dyn_storage": {
        "base": "t_struct(Instruction)4484_storage",
        "encoding": "dynamic_array",
        "label": "struct Instruction[]",
        "numberOfBytes": "32"
      },
      "t_contract(Proxy)4866": {
        "encoding": "inplace",
        "label": "contract Proxy",
        "numberOfBytes": "20"
      },
      "t_enum(Actions)4478": {
        "encoding": "inplace",
        "label": "enum Actions",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_array(t_struct(Instruction)4484_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Instruction[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Instruction)4484_storage)dyn_storage"
      },
      "t_struct(Instruction)4484_storage": {
        "encoding": "inplace",
        "label": "struct Instruction",
        "members": [
          {
            "astId": 4481,
            "contract": "contracts/Systems/EXC.sol:Executive",
            "label": "action",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(Actions)4478"
          },
          {
            "astId": 4483,
            "contract": "contracts/Systems/EXC.sol:Executive",
            "label": "target",
            "offset": 1,
            "slot": "0",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}