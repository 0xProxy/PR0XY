{
  "address": "0xF852e61d31847c0DdAEa2260469C4365b1845aE2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Proxy",
          "name": "proxy_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes2",
          "name": "memberId",
          "type": "bytes2"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BudgetIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes2",
          "name": "fromMemberId",
          "type": "bytes2"
        },
        {
          "indexed": false,
          "internalType": "bytes2",
          "name": "toMemberId",
          "type": "bytes2"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReputationGiven",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes2",
          "name": "fromMemberId",
          "type": "bytes2"
        },
        {
          "indexed": false,
          "internalType": "bytes2",
          "name": "toMemberId",
          "type": "bytes2"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReputationTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes2",
          "name": "fromMemberId",
          "type": "bytes2"
        }
      ],
      "name": "UniqueRepsIncremented",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes2",
          "name": "memberId",
          "type": "bytes2"
        }
      ],
      "name": "WalletRegistered",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "KEYCODE",
      "outputs": [
        {
          "internalType": "bytes3",
          "name": "",
          "type": "bytes3"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_proxy",
      "outputs": [
        {
          "internalType": "contract Proxy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes2",
          "name": "",
          "type": "bytes2"
        }
      ],
      "name": "budgetOfId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getId",
      "outputs": [
        {
          "internalType": "bytes2",
          "name": "",
          "type": "bytes2"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes2",
          "name": "memberId_",
          "type": "bytes2"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "increaseBudget",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes2",
          "name": "memberId_",
          "type": "bytes2"
        }
      ],
      "name": "incrementUniqueReps",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet_",
          "type": "address"
        }
      ],
      "name": "registerWallet",
      "outputs": [
        {
          "internalType": "bytes2",
          "name": "",
          "type": "bytes2"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes2",
          "name": "",
          "type": "bytes2"
        }
      ],
      "name": "scoreOfId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes2",
          "name": "",
          "type": "bytes2"
        },
        {
          "internalType": "bytes2",
          "name": "",
          "type": "bytes2"
        }
      ],
      "name": "totalGivenTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes2",
          "name": "from_",
          "type": "bytes2"
        },
        {
          "internalType": "bytes2",
          "name": "to_",
          "type": "bytes2"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "transferReputation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes2",
          "name": "",
          "type": "bytes2"
        }
      ],
      "name": "uniqueRepsOfId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes2",
          "name": "",
          "type": "bytes2"
        }
      ],
      "name": "walletOfId",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xbb1d122ca593676158915e33c0368999ea9219bd43090d1af54b5eb92439d72e",
  "receipt": {
    "to": null,
    "from": "0xca88A4b589bD76361517f20985365DE9c2376139",
    "contractAddress": "0xF852e61d31847c0DdAEa2260469C4365b1845aE2",
    "transactionIndex": 32,
    "gasUsed": "851185",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000800000000000000000000100000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000800000000000000000000000008000200000000000000000000000000000000000000000000000000000000000004000000000000000000001000000000080080000000000000000100000000000000000000000000000000000000000000000000000000004000000000000100020",
    "blockHash": "0xb795608f9ce1cf391166400b09cee1fffd7d22def68b4ff349ba8fd29af6946b",
    "transactionHash": "0xbb1d122ca593676158915e33c0368999ea9219bd43090d1af54b5eb92439d72e",
    "logs": [
      {
        "transactionIndex": 32,
        "blockNumber": 25887641,
        "transactionHash": "0xbb1d122ca593676158915e33c0368999ea9219bd43090d1af54b5eb92439d72e",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000ca88a4b589bd76361517f20985365de9c2376139",
          "0x000000000000000000000000127685d6dd6683085da4b6a041efcef1681e5c9c"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000a65227536a27a50000000000000000000000000000000000000000000000019f806a7ea5fbdc350000000000000000000000000000000000000000000004f7aab16d203d2275e40000000000000000000000000000000000000000000000019eda18575291b4900000000000000000000000000000000000000000000004f7ab57bf47908c9d89",
        "logIndex": 128,
        "blockHash": "0xb795608f9ce1cf391166400b09cee1fffd7d22def68b4ff349ba8fd29af6946b"
      }
    ],
    "blockNumber": 25887641,
    "cumulativeGasUsed": "5841587",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xF3DB9B38d636f244D90BA597c6dCF138ed23b4D6"
  ],
  "numDeployments": 1,
  "solcInputHash": "29fdace09ea6e3517bdc5ebb825f8869",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Proxy\",\"name\":\"proxy_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes2\",\"name\":\"memberId\",\"type\":\"bytes2\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BudgetIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes2\",\"name\":\"fromMemberId\",\"type\":\"bytes2\"},{\"indexed\":false,\"internalType\":\"bytes2\",\"name\":\"toMemberId\",\"type\":\"bytes2\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReputationGiven\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes2\",\"name\":\"fromMemberId\",\"type\":\"bytes2\"},{\"indexed\":false,\"internalType\":\"bytes2\",\"name\":\"toMemberId\",\"type\":\"bytes2\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReputationTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes2\",\"name\":\"fromMemberId\",\"type\":\"bytes2\"}],\"name\":\"UniqueRepsIncremented\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes2\",\"name\":\"memberId\",\"type\":\"bytes2\"}],\"name\":\"WalletRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"KEYCODE\",\"outputs\":[{\"internalType\":\"bytes3\",\"name\":\"\",\"type\":\"bytes3\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_proxy\",\"outputs\":[{\"internalType\":\"contract Proxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes2\",\"name\":\"\",\"type\":\"bytes2\"}],\"name\":\"budgetOfId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"bytes2\",\"name\":\"\",\"type\":\"bytes2\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes2\",\"name\":\"memberId_\",\"type\":\"bytes2\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"increaseBudget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes2\",\"name\":\"memberId_\",\"type\":\"bytes2\"}],\"name\":\"incrementUniqueReps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet_\",\"type\":\"address\"}],\"name\":\"registerWallet\",\"outputs\":[{\"internalType\":\"bytes2\",\"name\":\"\",\"type\":\"bytes2\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes2\",\"name\":\"\",\"type\":\"bytes2\"}],\"name\":\"scoreOfId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes2\",\"name\":\"\",\"type\":\"bytes2\"},{\"internalType\":\"bytes2\",\"name\":\"\",\"type\":\"bytes2\"}],\"name\":\"totalGivenTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes2\",\"name\":\"from_\",\"type\":\"bytes2\"},{\"internalType\":\"bytes2\",\"name\":\"to_\",\"type\":\"bytes2\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"transferReputation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes2\",\"name\":\"\",\"type\":\"bytes2\"}],\"name\":\"uniqueRepsOfId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes2\",\"name\":\"\",\"type\":\"bytes2\"}],\"name\":\"walletOfId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Systems/REP.sol\":\"Reputation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"contracts/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\n\\npragma solidity ^0.8.10;\\n\\ncontract System {\\n    Proxy public _proxy;\\n\\n\\n    constructor(Proxy proxy_) {\\n      _proxy = proxy_; \\n    }\\n\\n\\n    function KEYCODE() external pure virtual returns (bytes3) {}\\n\\n\\n    modifier onlyPolicy {\\n        require (_proxy.approvedPolicies( msg.sender ), \\\"onlyPolicy(): only approved policies can call this function\\\");\\n        _;\\n    }\\n}\\n\\n\\ncontract Policy {\\n  Proxy public _proxy;\\n\\n\\n  constructor(Proxy proxy_) {\\n      _proxy = proxy_; \\n  }\\n\\n\\n  function requireSystem(bytes3 keycode_) internal view returns (address) {\\n    address systemForKeycode = _proxy.getSystemForKeycode(keycode_);\\n\\n    require(systemForKeycode != address(0), \\\"cannot _requireSytem(): system does not exist\\\" );\\n\\n    return systemForKeycode;\\n  }\\n\\n\\n  function configureSystems() virtual external onlyProxy {}\\n\\n\\n  modifier onlyProxy {\\n    require (msg.sender == address(_proxy), \\\"onlyProxy(): only the Proxy can call this function\\\");\\n    _;\\n  }\\n\\n}\\n\\n\\nenum Actions {\\n  InstallSystem,\\n  UpgradeSystem,\\n  ApprovePolicy,\\n  TerminatePolicy,\\n  ChangeExecutive\\n}\\n\\n\\nstruct Instruction {\\n  Actions action;\\n  address target;\\n}\\n\\n\\ncontract Proxy{\\n\\n  address public executive; \\n\\n  constructor() {\\n    executive = msg.sender;\\n  }\\n  \\n  modifier onlyExecutive() {\\n    require ( msg.sender == executive, \\\"onlyExecutive(): only the assigned executive can call the function\\\" );\\n    _;\\n  }\\n\\n\\n  /////////////////////////////////////////////////////////////////////////////////////\\n  //                                  EPOCH STUFF                                    //\\n  /////////////////////////////////////////////////////////////////////////////////////\\n  \\n\\n  uint256 public startingEpochTimestamp; \\n  uint256 public constant epochLength = 60 * 60 * 24 * 7; // number of seconds in a week\\n  bool public isLaunched;\\n\\n\\n  function currentEpoch() public view returns (uint256) {\\n    if ( isLaunched == true && block.timestamp >= startingEpochTimestamp ) {\\n      return (( block.timestamp - startingEpochTimestamp ) / epochLength ) + 1;\\n    } else {\\n      return 0;\\n    }\\n  }\\n\\n  function launch() external onlyExecutive {\\n    require (isLaunched == false, \\\"cannot launch(): Proxy is already launched\\\");\\n    startingEpochTimestamp = epochLength * (( block.timestamp / epochLength ) + 1 );\\n    isLaunched = true;\\n  }\\n\\n\\n  ///////////////////////////////////////////////////////////////////////////////////////\\n  //                                 DEPENDENCY MANAGEMENT                             //\\n  ///////////////////////////////////////////////////////////////////////////////////////\\n\\n\\n  mapping(bytes3 => address) public getSystemForKeycode; // get contract for system keycode\\n  mapping(address => bytes3) public getKeycodeForSystem; // get system keycode for contract\\n  mapping(address => bool) public approvedPolicies; // whitelisted apps\\n  address[] public allPolicies;\\n\\n  event ActionExecuted(Actions action, address target);\\n  event AllPoliciesReconfigured(uint16 currentEpoch);\\n\\n  \\n  function executeAction(Actions action_, address target_) external onlyExecutive {\\n    if (action_ == Actions.InstallSystem) {\\n      _installSystem(target_); \\n\\n    } else if (action_ == Actions.UpgradeSystem) {\\n      _upgradeSystem(target_); \\n\\n    } else if (action_ == Actions.ApprovePolicy) {\\n      _approvePolicy(target_); \\n\\n    } else if (action_ == Actions.TerminatePolicy) {\\n      _terminatePolicy(target_); \\n    \\n    } else if (action_ == Actions.ChangeExecutive) {\\n      // require Proxy to install the executive system before calling ChangeExecutive on it\\n      require(getKeycodeForSystem[target_] == \\\"EXC\\\", \\\"cannot changeExecutive(): target is not the Executive system\\\");\\n      executive = target_;\\n    }\\n\\n    emit ActionExecuted(action_, target_);\\n  }\\n\\n\\n  function _installSystem(address newSystem_ ) internal {\\n    bytes3 keycode = System(newSystem_).KEYCODE();\\n    \\n    // @NOTE check newSystem_ != 0\\n    require( getSystemForKeycode[keycode] == address(0), \\\"cannot _installSystem(): Existing system found for keycode\\\");\\n\\n    getSystemForKeycode[keycode] = newSystem_;\\n    getKeycodeForSystem[newSystem_] = keycode;\\n  }\\n\\n\\n  function _upgradeSystem(address newSystem_ ) internal {\\n    bytes3 keycode = System(newSystem_).KEYCODE();\\n    address oldSystem = getSystemForKeycode[keycode];\\n    \\n    require(oldSystem != address(0) && oldSystem != newSystem_, \\\"cannot _upgradeSystem(): an existing system must be upgraded to a new system\\\");\\n\\n    getKeycodeForSystem[oldSystem] = bytes3(0);\\n    getKeycodeForSystem[newSystem_] = keycode;\\n    getSystemForKeycode[keycode] = newSystem_;\\n\\n    _reconfigurePolicies();\\n  }\\n\\n\\n  function _approvePolicy(address policy_ ) internal {\\n    require( approvedPolicies[policy_] == false, \\\"cannot _approvePolicy(): Policy is already approved\\\" );\\n\\n    approvedPolicies[policy_] = true;\\n    \\n    allPolicies.push(policy_);\\n    Policy(policy_).configureSystems();\\n  }\\n\\n  function _terminatePolicy(address policy_ ) internal {\\n    require( approvedPolicies[policy_] == true, \\\"cannot _terminatePolicy(): Policy is not approved\\\" );\\n    \\n    approvedPolicies[policy_] = false;\\n  }\\n\\n\\n  function _reconfigurePolicies() internal {\\n    for (uint i=0; i<allPolicies.length; i++) {\\n      address policy_ = allPolicies[i];\\n      if (approvedPolicies[policy_]) {\\n        Policy(policy_).configureSystems();\\n      }\\n    }\\n  }\\n}\\n\\n\\n\",\"keccak256\":\"0xcd12a205dfb8aa67849b69aa505c9b29cd8162d118672df21890d605c10972bb\",\"license\":\"GPL-2.0\"},\"contracts/Systems/REP.sol\":{\"content\":\"// Proxy Registry System\\n\\n\\n// SPDX-License-Identifier: GPL-2.0\\n\\npragma solidity ^0.8.11;\\n\\nimport \\\"../Proxy.sol\\\";\\n\\ncontract Reputation is System {\\n\\n\\n  /////////////////////////////////////////////////////////////////////////////////\\n  //                           Proxy Proxy Configuration                         //\\n  /////////////////////////////////////////////////////////////////////////////////\\n\\n\\n  constructor(Proxy proxy_) System(proxy_) {}\\n\\n\\n  function KEYCODE() external pure override returns (bytes3) { \\n    return \\\"REP\\\"; \\n  }\\n\\n\\n  /////////////////////////////////////////////////////////////////////////////////\\n  //                              System Variables                               //\\n  /////////////////////////////////////////////////////////////////////////////////\\n\\n\\n  mapping(address => bytes2) public getId;\\n  mapping(bytes2 => address) public walletOfId;\\n  \\n  mapping(bytes2 => uint256) public budgetOfId;\\n  mapping(bytes2 => uint256) public scoreOfId;\\n  mapping(bytes2 => uint256) public uniqueRepsOfId;\\n\\n  mapping(bytes2 => mapping(bytes2 => uint256)) public totalGivenTo;\\n\\n\\n  /////////////////////////////////////////////////////////////////////////////////\\n  //                             Functions                                       //\\n  /////////////////////////////////////////////////////////////////////////////////\\n\\n\\n  event WalletRegistered(address wallet, bytes2 memberId);\\n  event BudgetIncreased(bytes2 memberId, uint256 amount);\\n  event ReputationGiven(bytes2 fromMemberId, bytes2 toMemberId, uint256 amount);\\n  event ReputationTransferred(bytes2 fromMemberId, bytes2 toMemberId, uint256 amount);\\n  event UniqueRepsIncremented(bytes2 fromMemberId);\\n\\n\\n  // @@@ Check that the bytes2 hash cannot be bytes2(0)\\n  function registerWallet(address wallet_) external onlyPolicy returns (bytes2) {\\n    // validate: wallets cannot be registered twice. (just manually test this first)\\n    require( getId[wallet_] == bytes2(0), \\\"cannot registerWallet(): wallet already registered\\\" );\\n\\n    // 1. Take the first two bytes (4 hex characters) of a hash of the wallet\\n    bytes32 walletHash = keccak256(abi.encode(wallet_));\\n    bytes2 memberId = bytes2(walletHash);\\n\\n    // 2. If the memberId already exists (or is 0x0000), continue hashing until a unused memberId is found\\n    while (walletOfId[memberId] != address(0) || memberId == bytes2(0)) {\\n      walletHash = keccak256(abi.encode(walletHash));\\n      memberId = bytes2(walletHash);\\n    }\\n\\n    // 3. Save the id in the system\\n    getId[wallet_] = memberId;\\n    walletOfId[memberId] = wallet_;\\n\\n    // 4. emit event\\n    emit WalletRegistered(wallet_, memberId);\\n\\n    // 5. Return the user IIdd\\n    return memberId;\\n  }\\n\\n\\n  //\\n  function increaseBudget(bytes2 memberId_, uint256 amount_) external onlyPolicy {\\n    //\\n    budgetOfId[memberId_] += amount_;\\n\\n    emit BudgetIncreased(memberId_, amount_);\\n  }\\n  \\n\\n  function transferReputation(bytes2 from_, bytes2 to_, uint256 amount_) external onlyPolicy {    \\n    budgetOfId[ from_ ] -= amount_;\\n    scoreOfId[ to_ ] += amount_;\\n\\n    emit ReputationTransferred(from_, to_, amount_);\\n  }\\n\\n\\n  function incrementUniqueReps(bytes2 memberId_) external onlyPolicy {    \\n    uniqueRepsOfId[ memberId_ ]++;\\n\\n    emit UniqueRepsIncremented( memberId_ );\\n  }\\n}\\n\",\"keccak256\":\"0xa611254120cdbe96c013e91bcf639e2bab424e7b0d20eb8564448c8bb8aed01d\",\"license\":\"GPL-2.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610eb9380380610eb983398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610e26806100936000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063a946866511610081578063d48bf2b61161005b578063d48bf2b61461027c578063e4e6aaf71461028f578063ef97a27c146102a257600080fd5b8063a94686651461021c578063cc2effdc1461023c578063d2c1bbad1461025c57600080fd5b806361437dc5116100b257806361437dc5146101a057806365f68c89146101b5578063779beedf1461020957600080fd5b8063029ad22a146100d95780631a525da9146101175780631ae7ec2e14610172575b600080fd5b6101046100e7366004610c46565b600660209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61014d610125366004610c79565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010e565b6040517f5245500000000000000000000000000000000000000000000000000000000000815260200161010e565b6101b36101ae366004610c9b565b6102c2565b005b6101d86101c3366004610cc5565b60016020526000908152604090205460f01b81565b6040517fffff000000000000000000000000000000000000000000000000000000000000909116815260200161010e565b6101d8610217366004610cc5565b61048a565b61010461022a366004610c79565b60046020526000908152604090205481565b60005461014d9073ffffffffffffffffffffffffffffffffffffffff1681565b61010461026a366004610c79565b60036020526000908152604090205481565b6101b361028a366004610cfb565b61084b565b6101b361029d366004610c79565b610a5e565b6101046102b0366004610c79565b60056020526000908152604090205481565b6000546040517f1d10fc6400000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690631d10fc6490602401602060405180830381865afa158015610330573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103549190610d37565b6103e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f6f6e6c79506f6c69637928293a206f6e6c7920617070726f76656420706f6c6960448201527f636965732063616e2063616c6c20746869732066756e6374696f6e000000000060648201526084015b60405180910390fd5b7fffff000000000000000000000000000000000000000000000000000000000000821660009081526003602052604081208054839290610426908490610d88565b9091555050604080517fffff00000000000000000000000000000000000000000000000000000000000084168152602081018390527fe8506c32870aadbb32e522c3a29158c6870b0b20088c7d617ac387fd00331f2f910160405180910390a15050565b600080546040517f1d10fc6400000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690631d10fc6490602401602060405180830381865afa1580156104f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051d9190610d37565b6105a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f6f6e6c79506f6c69637928293a206f6e6c7920617070726f76656420706f6c6960448201527f636965732063616e2063616c6c20746869732066756e6374696f6e000000000060648201526084016103dc565b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090205460f01b7fffff0000000000000000000000000000000000000000000000000000000000001615610681576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f63616e6e6f7420726567697374657257616c6c657428293a2077616c6c65742060448201527f616c72656164792072656769737465726564000000000000000000000000000060648201526084016103dc565b6040805173ffffffffffffffffffffffffffffffffffffffff84166020808301919091528251808303820181529183019092528051910120805b7fffff000000000000000000000000000000000000000000000000000000000000811660009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615158061073057507fffff0000000000000000000000000000000000000000000000000000000000008116155b15610761576040805160208101849052016040516020818303038152906040528051906020012091508190506106bb565b73ffffffffffffffffffffffffffffffffffffffff8416600081815260016020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001660f087901c1790557fffff0000000000000000000000000000000000000000000000000000000000008516808452600283529281902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016851790558051938452908301919091527fa087e7df9814bb62e63c4564c1e76e995713b0847cd382b68132dbf55d348416910160405180910390a19150505b919050565b6000546040517f1d10fc6400000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690631d10fc6490602401602060405180830381865afa1580156108b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dd9190610d37565b610969576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f6f6e6c79506f6c69637928293a206f6e6c7920617070726f76656420706f6c6960448201527f636965732063616e2063616c6c20746869732066756e6374696f6e000000000060648201526084016103dc565b7fffff0000000000000000000000000000000000000000000000000000000000008316600090815260036020526040812080548392906109aa908490610da0565b90915550507fffff0000000000000000000000000000000000000000000000000000000000008216600090815260046020526040812080548392906109f0908490610d88565b9091555050604080517fffff0000000000000000000000000000000000000000000000000000000000008086168252841660208201529081018290527f92a6c41a0fa565ab5c8318070ce1e4ee4a44013f526d92a52e96b2eabb78434e9060600160405180910390a1505050565b6000546040517f1d10fc6400000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690631d10fc6490602401602060405180830381865afa158015610acc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af09190610d37565b610b7c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f6f6e6c79506f6c69637928293a206f6e6c7920617070726f76656420706f6c6960448201527f636965732063616e2063616c6c20746869732066756e6374696f6e000000000060648201526084016103dc565b7fffff00000000000000000000000000000000000000000000000000000000000081166000908152600560205260408120805491610bb983610db7565b90915550506040517fffff000000000000000000000000000000000000000000000000000000000000821681527fc703a0881020457c935e6bb08d74d557245d4eb36e0cf561e568412c4b8a30de9060200160405180910390a150565b80357fffff0000000000000000000000000000000000000000000000000000000000008116811461084657600080fd5b60008060408385031215610c5957600080fd5b610c6283610c16565b9150610c7060208401610c16565b90509250929050565b600060208284031215610c8b57600080fd5b610c9482610c16565b9392505050565b60008060408385031215610cae57600080fd5b610cb783610c16565b946020939093013593505050565b600060208284031215610cd757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610c9457600080fd5b600080600060608486031215610d1057600080fd5b610d1984610c16565b9250610d2760208501610c16565b9150604084013590509250925092565b600060208284031215610d4957600080fd5b81518015158114610c9457600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610d9b57610d9b610d59565b500190565b600082821015610db257610db2610d59565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610de957610de9610d59565b506001019056fea2646970667358221220973d306b8a186e141164163a7fdc48fd8b0b40a836c721a85719493b5887755c64736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100d45760003560e01c8063a946866511610081578063d48bf2b61161005b578063d48bf2b61461027c578063e4e6aaf71461028f578063ef97a27c146102a257600080fd5b8063a94686651461021c578063cc2effdc1461023c578063d2c1bbad1461025c57600080fd5b806361437dc5116100b257806361437dc5146101a057806365f68c89146101b5578063779beedf1461020957600080fd5b8063029ad22a146100d95780631a525da9146101175780631ae7ec2e14610172575b600080fd5b6101046100e7366004610c46565b600660209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61014d610125366004610c79565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010e565b6040517f5245500000000000000000000000000000000000000000000000000000000000815260200161010e565b6101b36101ae366004610c9b565b6102c2565b005b6101d86101c3366004610cc5565b60016020526000908152604090205460f01b81565b6040517fffff000000000000000000000000000000000000000000000000000000000000909116815260200161010e565b6101d8610217366004610cc5565b61048a565b61010461022a366004610c79565b60046020526000908152604090205481565b60005461014d9073ffffffffffffffffffffffffffffffffffffffff1681565b61010461026a366004610c79565b60036020526000908152604090205481565b6101b361028a366004610cfb565b61084b565b6101b361029d366004610c79565b610a5e565b6101046102b0366004610c79565b60056020526000908152604090205481565b6000546040517f1d10fc6400000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690631d10fc6490602401602060405180830381865afa158015610330573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103549190610d37565b6103e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f6f6e6c79506f6c69637928293a206f6e6c7920617070726f76656420706f6c6960448201527f636965732063616e2063616c6c20746869732066756e6374696f6e000000000060648201526084015b60405180910390fd5b7fffff000000000000000000000000000000000000000000000000000000000000821660009081526003602052604081208054839290610426908490610d88565b9091555050604080517fffff00000000000000000000000000000000000000000000000000000000000084168152602081018390527fe8506c32870aadbb32e522c3a29158c6870b0b20088c7d617ac387fd00331f2f910160405180910390a15050565b600080546040517f1d10fc6400000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690631d10fc6490602401602060405180830381865afa1580156104f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051d9190610d37565b6105a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f6f6e6c79506f6c69637928293a206f6e6c7920617070726f76656420706f6c6960448201527f636965732063616e2063616c6c20746869732066756e6374696f6e000000000060648201526084016103dc565b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090205460f01b7fffff0000000000000000000000000000000000000000000000000000000000001615610681576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f63616e6e6f7420726567697374657257616c6c657428293a2077616c6c65742060448201527f616c72656164792072656769737465726564000000000000000000000000000060648201526084016103dc565b6040805173ffffffffffffffffffffffffffffffffffffffff84166020808301919091528251808303820181529183019092528051910120805b7fffff000000000000000000000000000000000000000000000000000000000000811660009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615158061073057507fffff0000000000000000000000000000000000000000000000000000000000008116155b15610761576040805160208101849052016040516020818303038152906040528051906020012091508190506106bb565b73ffffffffffffffffffffffffffffffffffffffff8416600081815260016020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001660f087901c1790557fffff0000000000000000000000000000000000000000000000000000000000008516808452600283529281902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016851790558051938452908301919091527fa087e7df9814bb62e63c4564c1e76e995713b0847cd382b68132dbf55d348416910160405180910390a19150505b919050565b6000546040517f1d10fc6400000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690631d10fc6490602401602060405180830381865afa1580156108b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dd9190610d37565b610969576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f6f6e6c79506f6c69637928293a206f6e6c7920617070726f76656420706f6c6960448201527f636965732063616e2063616c6c20746869732066756e6374696f6e000000000060648201526084016103dc565b7fffff0000000000000000000000000000000000000000000000000000000000008316600090815260036020526040812080548392906109aa908490610da0565b90915550507fffff0000000000000000000000000000000000000000000000000000000000008216600090815260046020526040812080548392906109f0908490610d88565b9091555050604080517fffff0000000000000000000000000000000000000000000000000000000000008086168252841660208201529081018290527f92a6c41a0fa565ab5c8318070ce1e4ee4a44013f526d92a52e96b2eabb78434e9060600160405180910390a1505050565b6000546040517f1d10fc6400000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690631d10fc6490602401602060405180830381865afa158015610acc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af09190610d37565b610b7c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f6f6e6c79506f6c69637928293a206f6e6c7920617070726f76656420706f6c6960448201527f636965732063616e2063616c6c20746869732066756e6374696f6e000000000060648201526084016103dc565b7fffff00000000000000000000000000000000000000000000000000000000000081166000908152600560205260408120805491610bb983610db7565b90915550506040517fffff000000000000000000000000000000000000000000000000000000000000821681527fc703a0881020457c935e6bb08d74d557245d4eb36e0cf561e568412c4b8a30de9060200160405180910390a150565b80357fffff0000000000000000000000000000000000000000000000000000000000008116811461084657600080fd5b60008060408385031215610c5957600080fd5b610c6283610c16565b9150610c7060208401610c16565b90509250929050565b600060208284031215610c8b57600080fd5b610c9482610c16565b9392505050565b60008060408385031215610cae57600080fd5b610cb783610c16565b946020939093013593505050565b600060208284031215610cd757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610c9457600080fd5b600080600060608486031215610d1057600080fd5b610d1984610c16565b9250610d2760208501610c16565b9150604084013590509250925092565b600060208284031215610d4957600080fd5b81518015158114610c9457600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610d9b57610d9b610d59565b500190565b600082821015610db257610db2610d59565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610de957610de9610d59565b506001019056fea2646970667358221220973d306b8a186e141164163a7fdc48fd8b0b40a836c721a85719493b5887755c64736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4398,
        "contract": "contracts/Systems/REP.sol:Reputation",
        "label": "_proxy",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(Proxy)4886"
      },
      {
        "astId": 5221,
        "contract": "contracts/Systems/REP.sol:Reputation",
        "label": "getId",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bytes2)"
      },
      {
        "astId": 5225,
        "contract": "contracts/Systems/REP.sol:Reputation",
        "label": "walletOfId",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes2,t_address)"
      },
      {
        "astId": 5229,
        "contract": "contracts/Systems/REP.sol:Reputation",
        "label": "budgetOfId",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes2,t_uint256)"
      },
      {
        "astId": 5233,
        "contract": "contracts/Systems/REP.sol:Reputation",
        "label": "scoreOfId",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_bytes2,t_uint256)"
      },
      {
        "astId": 5237,
        "contract": "contracts/Systems/REP.sol:Reputation",
        "label": "uniqueRepsOfId",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_bytes2,t_uint256)"
      },
      {
        "astId": 5243,
        "contract": "contracts/Systems/REP.sol:Reputation",
        "label": "totalGivenTo",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_bytes2,t_mapping(t_bytes2,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes2": {
        "encoding": "inplace",
        "label": "bytes2",
        "numberOfBytes": "2"
      },
      "t_contract(Proxy)4886": {
        "encoding": "inplace",
        "label": "contract Proxy",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bytes2)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes2)",
        "numberOfBytes": "32",
        "value": "t_bytes2"
      },
      "t_mapping(t_bytes2,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes2",
        "label": "mapping(bytes2 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_bytes2,t_mapping(t_bytes2,t_uint256))": {
        "encoding": "mapping",
        "key": "t_bytes2",
        "label": "mapping(bytes2 => mapping(bytes2 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes2,t_uint256)"
      },
      "t_mapping(t_bytes2,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes2",
        "label": "mapping(bytes2 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}